# Docker Compose Configuration for SSD Deployment on Raspberry Pi
# Optimized for SSD storage with enhanced performance and reliability
# Use with: docker-compose -f docker-compose.ssd.yml up -d

services:
  reading-tracker:
    build:
      context: .
      dockerfile: Dockerfile.rpi
      target: production
      platforms:
        - linux/arm64
    container_name: personal-reading-tracker-ssd
    ports:
      - "${APP_PORT:-3003}:3003"
    environment:
      - NODE_ENV=production
      - PORT=3003
      - DATABASE_PATH=/app/data/reading-tracker.db
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOGS_PATH=/app/logs
      - LOG_TO_FILE=true
      - CORS_ORIGIN=${CORS_ORIGIN:-http://192.168.0.177:3003}
      - RASPBERRY_PI=true
      - NODE_OPTIONS=--max-old-space-size=512 --max-semi-space-size=64
      - UV_THREADPOOL_SIZE=8
      - SQLITE_CACHE_SIZE=10000
      - SQLITE_TEMP_STORE=memory
      - SQLITE_SYNCHRONOUS=NORMAL
      - SQLITE_WAL_MODE=true
    volumes:
      - /mnt/SSD/projects/personal-reading-tracker/data:/app/data
      - /mnt/SSD/projects/personal-reading-tracker/logs:/app/logs
      - /mnt/SSD/projects/personal-reading-tracker/backups:/app/backups
      - /mnt/SSD/projects/personal-reading-tracker/imports:/app/imports
      - reading_tmp:/app/tmp
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3003/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 45s
    networks:
      - reading-network
    labels:
      - "com.personal-reading-tracker.service=main"
      - "com.personal-reading-tracker.version=1.0.0"
      - "com.personal-reading-tracker.platform=raspberry-pi-ssd"
      - "com.personal-reading-tracker.storage=ssd"
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '1.0'
        reservations:
          memory: 256M
          cpus: '0.5'
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 5
        window: 300s
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "5"
        compress: "true"
    security_opt:
      - no-new-privileges:true
    tmpfs:
      - /tmp:noexec,nosuid,size=100m
    ulimits:
      nproc: 1024
      nofile:
        soft: 2048
        hard: 4096

  monitoring:
    image: prom/node-exporter:latest
    container_name: reading-tracker-monitoring-ssd
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /mnt/SSD:/host/ssd:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($|/)'
      - '--collector.netdev.device-exclude=^lo$'
      - '--collector.textfile.directory=/host/proc'
      - '--collector.diskstats'
      - '--collector.filesystem'
    restart: unless-stopped
    networks:
      - reading-network
    profiles:
      - monitoring
    labels:
      - "com.personal-reading-tracker.service=monitoring"
      - "com.personal-reading-tracker.platform=raspberry-pi-ssd"
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.2'
        reservations:
          memory: 64M
          cpus: '0.1'

  backup:
    image: alpine:latest
    container_name: reading-tracker-backup-ssd
    volumes:
      - /mnt/SSD/projects/personal-reading-tracker/data:/data:ro
      - /mnt/SSD/projects/personal-reading-tracker/backups:/backups
    environment:
      - BACKUP_RETENTION_DAYS=30
      - BACKUP_INTERVAL_HOURS=6
    command: >
      sh -c "
        apk add --no-cache sqlite &&
        while true; do
          timestamp=$$(date +%Y%m%d-%H%M%S)
          echo \"Creating backup at $$timestamp\"
          sqlite3 /data/reading-tracker.db \".backup /backups/reading-tracker-$$timestamp.db\"
          find /backups -name 'reading-tracker-*.db' -mtime +30 -delete
          echo \"Backup completed: reading-tracker-$$timestamp.db\"
          sleep $${BACKUP_INTERVAL_HOURS:-6}h
        done
      "
    restart: unless-stopped
    networks:
      - reading-network
    profiles:
      - backup
    labels:
      - "com.personal-reading-tracker.service=backup"
      - "com.personal-reading-tracker.platform=raspberry-pi-ssd"
    deploy:
      resources:
        limits:
          memory: 64M
          cpus: '0.1'

networks:
  reading-network:
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1500
    labels:
      - "com.personal-reading-tracker.network=main"
      - "com.personal-reading-tracker.platform=raspberry-pi-ssd"

volumes:
  reading_tmp:
    driver: local
    labels:
      - "com.personal-reading-tracker.volume=tmp"
      - "com.personal-reading-tracker.platform=raspberry-pi-ssd"