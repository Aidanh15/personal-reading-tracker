# Docker Compose Configuration for Raspberry Pi Deployment
# Use with: docker-compose -f docker-compose.rpi.yml up -d

version: '3.8'

services:
  reading-tracker:
    build:
      context: .
      dockerfile: Dockerfile.rpi
      target: production
      platforms:
        - linux/arm64
    container_name: personal-reading-tracker-rpi
    ports:
      - "${APP_PORT:-3000}:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DATABASE_PATH=/app/data/reading-tracker.db
      - LOG_LEVEL=${LOG_LEVEL:-warn}
      - CORS_ORIGIN=${CORS_ORIGIN:-http://localhost:3000}
      - RASPBERRY_PI=true
      - NODE_OPTIONS=--max-old-space-size=256 --gc-interval=100
      - UV_THREADPOOL_SIZE=4
    volumes:
      - reading_data:/app/data
      - reading_logs:/app/logs
      - reading_tmp:/app/tmp
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 60s
      timeout: 15s
      retries: 3
      start_period: 60s
    networks:
      - reading-network
    labels:
      - "com.personal-reading-tracker.service=main"
      - "com.personal-reading-tracker.version=1.0.0"
      - "com.personal-reading-tracker.platform=raspberry-pi"
    # Raspberry Pi optimized resource limits
    deploy:
      resources:
        limits:
          memory: 384M  # Conservative limit for Pi
          cpus: '0.8'   # Leave some CPU for system
        reservations:
          memory: 192M
          cpus: '0.4'
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 5
        window: 300s
    # Production logging configuration optimized for SD card
    logging:
      driver: "json-file"
      options:
        max-size: "5m"    # Smaller log files for SD card
        max-file: "2"     # Fewer log files
        compress: "true"  # Compress old logs
    # Security options
    security_opt:
      - no-new-privileges:true
    # Read-only root filesystem for security and SD card longevity
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=50m
      - /app/tmp:noexec,nosuid,size=25m
    # Process limits for stability
    ulimits:
      nproc: 512
      nofile:
        soft: 1024
        hard: 2048

  # Optional: Lightweight monitoring for Raspberry Pi
  monitoring:
    image: prom/node-exporter:latest
    container_name: reading-tracker-monitoring-rpi
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($|/)'
      - '--collector.netdev.device-exclude=^lo$$'
      - '--collector.textfile.directory=/host/proc'
    restart: unless-stopped
    networks:
      - reading-network
    profiles:
      - monitoring
    labels:
      - "com.personal-reading-tracker.service=monitoring"
      - "com.personal-reading-tracker.platform=raspberry-pi"
    deploy:
      resources:
        limits:
          memory: 64M
          cpus: '0.1'
        reservations:
          memory: 32M
          cpus: '0.05'

  # Optional: Log rotation service for SD card health
  logrotate:
    image: alpine:latest
    container_name: reading-tracker-logrotate
    volumes:
      - reading_logs:/logs
      - ./scripts/logrotate.conf:/etc/logrotate.conf:ro
    command: >
      sh -c "
        apk add --no-cache logrotate &&
        while true; do
          logrotate -f /etc/logrotate.conf
          sleep 3600
        done
      "
    restart: unless-stopped
    networks:
      - reading-network
    profiles:
      - logrotate
    labels:
      - "com.personal-reading-tracker.service=logrotate"
      - "com.personal-reading-tracker.platform=raspberry-pi"
    deploy:
      resources:
        limits:
          memory: 32M
          cpus: '0.05'

networks:
  reading-network:
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1500
    labels:
      - "com.personal-reading-tracker.network=main"
      - "com.personal-reading-tracker.platform=raspberry-pi"

volumes:
  reading_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DATA_PATH:-./data}
    labels:
      - "com.personal-reading-tracker.volume=data"
      - "com.personal-reading-tracker.platform=raspberry-pi"
  reading_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${LOGS_PATH:-./logs}
    labels:
      - "com.personal-reading-tracker.volume=logs"
      - "com.personal-reading-tracker.platform=raspberry-pi"
  reading_tmp:
    driver: local
    labels:
      - "com.personal-reading-tracker.volume=tmp"
      - "com.personal-reading-tracker.platform=raspberry-pi"